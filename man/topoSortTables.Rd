% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/joinController.R
\name{topoSortTables}
\alias{topoSortTables}
\title{Topologically sort join plan do values are available before uses.}
\usage{
topoSortTables(columnJoinPlan, leftTableName, ...)
}
\arguments{
\item{columnJoinPlan}{join plan}

\item{leftTableName}{which table is left}

\item{...}{force later arguments to bind by name}
}
\value{
list with dependencyGraph and sorted columnJoinPlan
}
\description{
Depends on \code{igraph} package.
}
\examples{


# note: employeeAndDate is likely built as a cross-product
#       join of an employee table and set of dates of interest
#       before getting to the join controller step.  We call
#       such a table "row control" or "experimental design."
# Normally tDesc is produced by inspecting tables using
# replyr::tableDescription() and then limiting the keys
# column down to the correct specification.
# For this example we just type tDesc in directly.
tDesc <- data.frame(tableName= c('employeeAndDate',
                                 'orgtable',
                                 'revenue',
                                 'activity'),
                    handle= I(list(NULL, NULL, NULL, NULL)),
                    columns= I(list(c('id', 'date'),
                                  c('id', 'date', 'dept'),
                                  c('date', 'dept', 'rev'),
                                  c('id', 'date', 'hours'))),
                    keys =  I(list(c('id'='id', 'date'='date'),
                                 c('id'='id', 'date'='date'),
                                 c('date'='date', 'dept'='dept'),
                                 c('id'='id', 'date'='date'))),
                    colClass= I(list(c('character', 'numeric'),
                                   c('character', 'character', 'character'),
                                   c('numeric', 'character', 'numeric'),
                                   c('character', 'numeric', 'numeric'))),
                    sourceClass= 'None',
                    isEmpty= FALSE,
                    stringsAsFactors = FALSE)
# mess up order
tDesc <- tDesc[seq(nrow(tDesc),1), , drop=FALSE]
columnJoinPlan <- buildJoinPlan(tDesc, check= FALSE)
print(inspectDescrAndJoinPlan(tDesc, columnJoinPlan))
if(requireNamespace('igraph', quietly = TRUE)) {
   sorted <- topoSortTables(columnJoinPlan, 'employeeAndDate')
   print(inspectDescrAndJoinPlan(tDesc, sorted$columnJoinPlan))
   # plot(sorted$dependencyGraph)
}

}
